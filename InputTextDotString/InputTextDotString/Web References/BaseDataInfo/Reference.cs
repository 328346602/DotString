//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18449
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18449 版自动生成。
// 
#pragma warning disable 1591

namespace InputTextDotString.BaseDataInfo {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BaseDataInfoSoap", Namespace="http://www.mapgis.com.cn/")]
    public partial class BaseDataInfo : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetSubjectListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegionCodeBySYSLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetYearBySubjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetYearBySubjectExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetYearBySubjectListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJSYDYearsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetYearsBySubjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataFieldBySolutionNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubjectByYearOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubjectNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubjectPublishInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInputAttValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInputAttNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRegionCodeFromLayerInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllSubjectFromLayerInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllYearOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllScaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllScaleStrOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BaseDataInfo() {
            this.Url = global::InputTextDotString.Properties.Settings.Default.InputTextDotString_BaseDataInfo_BaseDataInfo;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetSubjectListCompletedEventHandler GetSubjectListCompleted;
        
        /// <remarks/>
        public event GetRegionCodeBySYSLCompletedEventHandler GetRegionCodeBySYSLCompleted;
        
        /// <remarks/>
        public event GetYearBySubjectCompletedEventHandler GetYearBySubjectCompleted;
        
        /// <remarks/>
        public event GetYearBySubjectExCompletedEventHandler GetYearBySubjectExCompleted;
        
        /// <remarks/>
        public event GetYearBySubjectListCompletedEventHandler GetYearBySubjectListCompleted;
        
        /// <remarks/>
        public event GetJSYDYearsInfoCompletedEventHandler GetJSYDYearsInfoCompleted;
        
        /// <remarks/>
        public event GetYearsBySubjectCompletedEventHandler GetYearsBySubjectCompleted;
        
        /// <remarks/>
        public event GetDataFieldBySolutionNameCompletedEventHandler GetDataFieldBySolutionNameCompleted;
        
        /// <remarks/>
        public event GetSubjectByYearCompletedEventHandler GetSubjectByYearCompleted;
        
        /// <remarks/>
        public event GetSubjectNameCompletedEventHandler GetSubjectNameCompleted;
        
        /// <remarks/>
        public event GetSubjectPublishInfoCompletedEventHandler GetSubjectPublishInfoCompleted;
        
        /// <remarks/>
        public event GetInputAttValueCompletedEventHandler GetInputAttValueCompleted;
        
        /// <remarks/>
        public event GetInputAttNameCompletedEventHandler GetInputAttNameCompleted;
        
        /// <remarks/>
        public event GetAllRegionCodeFromLayerInfoCompletedEventHandler GetAllRegionCodeFromLayerInfoCompleted;
        
        /// <remarks/>
        public event GetAllSubjectFromLayerInfoCompletedEventHandler GetAllSubjectFromLayerInfoCompleted;
        
        /// <remarks/>
        public event GetAllYearCompletedEventHandler GetAllYearCompleted;
        
        /// <remarks/>
        public event GetAllScaleCompletedEventHandler GetAllScaleCompleted;
        
        /// <remarks/>
        public event GetAllScaleStrCompletedEventHandler GetAllScaleStrCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mapgis.com.cn/GetSubjectList", RequestNamespace="http://www.mapgis.com.cn/", ResponseNamespace="http://www.mapgis.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSubjectList() {
            object[] results = this.Invoke("GetSubjectList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubjectListAsync() {
            this.GetSubjectListAsync(null);
        }
        
        /// <remarks/>
        public void GetSubjectListAsync(object userState) {
            if ((this.GetSubjectListOperationCompleted == null)) {
                this.GetSubjectListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubjectListOperationCompleted);
            }
            this.InvokeAsync("GetSubjectList", new object[0], this.GetSubjectListOperationCompleted, userState);
        }
        
        private void OnGetSubjectListOperationCompleted(object arg) {
            if ((this.GetSubjectListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubjectListCompleted(this, new GetSubjectListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mapgis.com.cn/GetRegionCodeBySYSL", RequestNamespace="http://www.mapgis.com.cn/", ResponseNamespace="http://www.mapgis.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRegionCodeBySYSL(string strSubjectType, string strDataYear, string strScale, string strLayerName) {
            object[] results = this.Invoke("GetRegionCodeBySYSL", new object[] {
                        strSubjectType,
                        strDataYear,
                        strScale,
                        strLayerName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRegionCodeBySYSLAsync(string strSubjectType, string strDataYear, string strScale, string strLayerName) {
            this.GetRegionCodeBySYSLAsync(strSubjectType, strDataYear, strScale, strLayerName, null);
        }
        
        /// <remarks/>
        public void GetRegionCodeBySYSLAsync(string strSubjectType, string strDataYear, string strScale, string strLayerName, object userState) {
            if ((this.GetRegionCodeBySYSLOperationCompleted == null)) {
                this.GetRegionCodeBySYSLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegionCodeBySYSLOperationCompleted);
            }
            this.InvokeAsync("GetRegionCodeBySYSL", new object[] {
                        strSubjectType,
                        strDataYear,
                        strScale,
                        strLayerName}, this.GetRegionCodeBySYSLOperationCompleted, userState);
        }
        
        private void OnGetRegionCodeBySYSLOperationCompleted(object arg) {
            if ((this.GetRegionCodeBySYSLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegionCodeBySYSLCompleted(this, new GetRegionCodeBySYSLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mapgis.com.cn/GetYearBySubject", RequestNamespace="http://www.mapgis.com.cn/", ResponseNamespace="http://www.mapgis.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetYearBySubject(string strSubjectType) {
            object[] results = this.Invoke("GetYearBySubject", new object[] {
                        strSubjectType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetYearBySubjectAsync(string strSubjectType) {
            this.GetYearBySubjectAsync(strSubjectType, null);
        }
        
        /// <remarks/>
        public void GetYearBySubjectAsync(string strSubjectType, object userState) {
            if ((this.GetYearBySubjectOperationCompleted == null)) {
                this.GetYearBySubjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetYearBySubjectOperationCompleted);
            }
            this.InvokeAsync("GetYearBySubject", new object[] {
                        strSubjectType}, this.GetYearBySubjectOperationCompleted, userState);
        }
        
        private void OnGetYearBySubjectOperationCompleted(object arg) {
            if ((this.GetYearBySubjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetYearBySubjectCompleted(this, new GetYearBySubjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mapgis.com.cn/GetYearBySubjectEx", RequestNamespace="http://www.mapgis.com.cn/", ResponseNamespace="http://www.mapgis.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetYearBySubjectEx(string strSubjectType) {
            object[] results = this.Invoke("GetYearBySubjectEx", new object[] {
                        strSubjectType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetYearBySubjectExAsync(string strSubjectType) {
            this.GetYearBySubjectExAsync(strSubjectType, null);
        }
        
        /// <remarks/>
        public void GetYearBySubjectExAsync(string strSubjectType, object userState) {
            if ((this.GetYearBySubjectExOperationCompleted == null)) {
                this.GetYearBySubjectExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetYearBySubjectExOperationCompleted);
            }
            this.InvokeAsync("GetYearBySubjectEx", new object[] {
                        strSubjectType}, this.GetYearBySubjectExOperationCompleted, userState);
        }
        
        private void OnGetYearBySubjectExOperationCompleted(object arg) {
            if ((this.GetYearBySubjectExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetYearBySubjectExCompleted(this, new GetYearBySubjectExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mapgis.com.cn/GetYearBySubjectList", RequestNamespace="http://www.mapgis.com.cn/", ResponseNamespace="http://www.mapgis.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetYearBySubjectList(string sSubjectType, string sSolution) {
            object[] results = this.Invoke("GetYearBySubjectList", new object[] {
                        sSubjectType,
                        sSolution});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetYearBySubjectListAsync(string sSubjectType, string sSolution) {
            this.GetYearBySubjectListAsync(sSubjectType, sSolution, null);
        }
        
        /// <remarks/>
        public void GetYearBySubjectListAsync(string sSubjectType, string sSolution, object userState) {
            if ((this.GetYearBySubjectListOperationCompleted == null)) {
                this.GetYearBySubjectListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetYearBySubjectListOperationCompleted);
            }
            this.InvokeAsync("GetYearBySubjectList", new object[] {
                        sSubjectType,
                        sSolution}, this.GetYearBySubjectListOperationCompleted, userState);
        }
        
        private void OnGetYearBySubjectListOperationCompleted(object arg) {
            if ((this.GetYearBySubjectListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetYearBySubjectListCompleted(this, new GetYearBySubjectListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mapgis.com.cn/GetJSYDYearsInfo", RequestNamespace="http://www.mapgis.com.cn/", ResponseNamespace="http://www.mapgis.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetJSYDYearsInfo(string sRegionCode, string sType) {
            object[] results = this.Invoke("GetJSYDYearsInfo", new object[] {
                        sRegionCode,
                        sType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetJSYDYearsInfoAsync(string sRegionCode, string sType) {
            this.GetJSYDYearsInfoAsync(sRegionCode, sType, null);
        }
        
        /// <remarks/>
        public void GetJSYDYearsInfoAsync(string sRegionCode, string sType, object userState) {
            if ((this.GetJSYDYearsInfoOperationCompleted == null)) {
                this.GetJSYDYearsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJSYDYearsInfoOperationCompleted);
            }
            this.InvokeAsync("GetJSYDYearsInfo", new object[] {
                        sRegionCode,
                        sType}, this.GetJSYDYearsInfoOperationCompleted, userState);
        }
        
        private void OnGetJSYDYearsInfoOperationCompleted(object arg) {
            if ((this.GetJSYDYearsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJSYDYearsInfoCompleted(this, new GetJSYDYearsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mapgis.com.cn/GetYearsBySubject", RequestNamespace="http://www.mapgis.com.cn/", ResponseNamespace="http://www.mapgis.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetYearsBySubject(string strSolutionName, string strInputAtt, string strDots, string strDotType) {
            object[] results = this.Invoke("GetYearsBySubject", new object[] {
                        strSolutionName,
                        strInputAtt,
                        strDots,
                        strDotType});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetYearsBySubjectAsync(string strSolutionName, string strInputAtt, string strDots, string strDotType) {
            this.GetYearsBySubjectAsync(strSolutionName, strInputAtt, strDots, strDotType, null);
        }
        
        /// <remarks/>
        public void GetYearsBySubjectAsync(string strSolutionName, string strInputAtt, string strDots, string strDotType, object userState) {
            if ((this.GetYearsBySubjectOperationCompleted == null)) {
                this.GetYearsBySubjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetYearsBySubjectOperationCompleted);
            }
            this.InvokeAsync("GetYearsBySubject", new object[] {
                        strSolutionName,
                        strInputAtt,
                        strDots,
                        strDotType}, this.GetYearsBySubjectOperationCompleted, userState);
        }
        
        private void OnGetYearsBySubjectOperationCompleted(object arg) {
            if ((this.GetYearsBySubjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetYearsBySubjectCompleted(this, new GetYearsBySubjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mapgis.com.cn/GetDataFieldBySolutionName", RequestNamespace="http://www.mapgis.com.cn/", ResponseNamespace="http://www.mapgis.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataFieldBySolutionName(string strSolutionName, string strField) {
            object[] results = this.Invoke("GetDataFieldBySolutionName", new object[] {
                        strSolutionName,
                        strField});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataFieldBySolutionNameAsync(string strSolutionName, string strField) {
            this.GetDataFieldBySolutionNameAsync(strSolutionName, strField, null);
        }
        
        /// <remarks/>
        public void GetDataFieldBySolutionNameAsync(string strSolutionName, string strField, object userState) {
            if ((this.GetDataFieldBySolutionNameOperationCompleted == null)) {
                this.GetDataFieldBySolutionNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataFieldBySolutionNameOperationCompleted);
            }
            this.InvokeAsync("GetDataFieldBySolutionName", new object[] {
                        strSolutionName,
                        strField}, this.GetDataFieldBySolutionNameOperationCompleted, userState);
        }
        
        private void OnGetDataFieldBySolutionNameOperationCompleted(object arg) {
            if ((this.GetDataFieldBySolutionNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataFieldBySolutionNameCompleted(this, new GetDataFieldBySolutionNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mapgis.com.cn/GetSubjectByYear", RequestNamespace="http://www.mapgis.com.cn/", ResponseNamespace="http://www.mapgis.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSubjectByYear(string strDataYear) {
            object[] results = this.Invoke("GetSubjectByYear", new object[] {
                        strDataYear});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubjectByYearAsync(string strDataYear) {
            this.GetSubjectByYearAsync(strDataYear, null);
        }
        
        /// <remarks/>
        public void GetSubjectByYearAsync(string strDataYear, object userState) {
            if ((this.GetSubjectByYearOperationCompleted == null)) {
                this.GetSubjectByYearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubjectByYearOperationCompleted);
            }
            this.InvokeAsync("GetSubjectByYear", new object[] {
                        strDataYear}, this.GetSubjectByYearOperationCompleted, userState);
        }
        
        private void OnGetSubjectByYearOperationCompleted(object arg) {
            if ((this.GetSubjectByYearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubjectByYearCompleted(this, new GetSubjectByYearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mapgis.com.cn/GetSubjectName", RequestNamespace="http://www.mapgis.com.cn/", ResponseNamespace="http://www.mapgis.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSubjectName(string strSubjectType) {
            object[] results = this.Invoke("GetSubjectName", new object[] {
                        strSubjectType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubjectNameAsync(string strSubjectType) {
            this.GetSubjectNameAsync(strSubjectType, null);
        }
        
        /// <remarks/>
        public void GetSubjectNameAsync(string strSubjectType, object userState) {
            if ((this.GetSubjectNameOperationCompleted == null)) {
                this.GetSubjectNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubjectNameOperationCompleted);
            }
            this.InvokeAsync("GetSubjectName", new object[] {
                        strSubjectType}, this.GetSubjectNameOperationCompleted, userState);
        }
        
        private void OnGetSubjectNameOperationCompleted(object arg) {
            if ((this.GetSubjectNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubjectNameCompleted(this, new GetSubjectNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mapgis.com.cn/GetSubjectPublishInfo", RequestNamespace="http://www.mapgis.com.cn/", ResponseNamespace="http://www.mapgis.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSubjectPublishInfo() {
            object[] results = this.Invoke("GetSubjectPublishInfo", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubjectPublishInfoAsync() {
            this.GetSubjectPublishInfoAsync(null);
        }
        
        /// <remarks/>
        public void GetSubjectPublishInfoAsync(object userState) {
            if ((this.GetSubjectPublishInfoOperationCompleted == null)) {
                this.GetSubjectPublishInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubjectPublishInfoOperationCompleted);
            }
            this.InvokeAsync("GetSubjectPublishInfo", new object[0], this.GetSubjectPublishInfoOperationCompleted, userState);
        }
        
        private void OnGetSubjectPublishInfoOperationCompleted(object arg) {
            if ((this.GetSubjectPublishInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubjectPublishInfoCompleted(this, new GetSubjectPublishInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mapgis.com.cn/GetInputAttValue", RequestNamespace="http://www.mapgis.com.cn/", ResponseNamespace="http://www.mapgis.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetInputAttValue(string strSolutionName, string strTableField, string strTableField2, string strWhere) {
            object[] results = this.Invoke("GetInputAttValue", new object[] {
                        strSolutionName,
                        strTableField,
                        strTableField2,
                        strWhere});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetInputAttValueAsync(string strSolutionName, string strTableField, string strTableField2, string strWhere) {
            this.GetInputAttValueAsync(strSolutionName, strTableField, strTableField2, strWhere, null);
        }
        
        /// <remarks/>
        public void GetInputAttValueAsync(string strSolutionName, string strTableField, string strTableField2, string strWhere, object userState) {
            if ((this.GetInputAttValueOperationCompleted == null)) {
                this.GetInputAttValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInputAttValueOperationCompleted);
            }
            this.InvokeAsync("GetInputAttValue", new object[] {
                        strSolutionName,
                        strTableField,
                        strTableField2,
                        strWhere}, this.GetInputAttValueOperationCompleted, userState);
        }
        
        private void OnGetInputAttValueOperationCompleted(object arg) {
            if ((this.GetInputAttValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInputAttValueCompleted(this, new GetInputAttValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mapgis.com.cn/GetInputAttName", RequestNamespace="http://www.mapgis.com.cn/", ResponseNamespace="http://www.mapgis.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInputAttName(string strSolutionName, string strTableField) {
            object[] results = this.Invoke("GetInputAttName", new object[] {
                        strSolutionName,
                        strTableField});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInputAttNameAsync(string strSolutionName, string strTableField) {
            this.GetInputAttNameAsync(strSolutionName, strTableField, null);
        }
        
        /// <remarks/>
        public void GetInputAttNameAsync(string strSolutionName, string strTableField, object userState) {
            if ((this.GetInputAttNameOperationCompleted == null)) {
                this.GetInputAttNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInputAttNameOperationCompleted);
            }
            this.InvokeAsync("GetInputAttName", new object[] {
                        strSolutionName,
                        strTableField}, this.GetInputAttNameOperationCompleted, userState);
        }
        
        private void OnGetInputAttNameOperationCompleted(object arg) {
            if ((this.GetInputAttNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInputAttNameCompleted(this, new GetInputAttNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mapgis.com.cn/GetAllRegionCodeFromLayerInfo", RequestNamespace="http://www.mapgis.com.cn/", ResponseNamespace="http://www.mapgis.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllRegionCodeFromLayerInfo(string strSubjectName, string strYear, string strScale) {
            object[] results = this.Invoke("GetAllRegionCodeFromLayerInfo", new object[] {
                        strSubjectName,
                        strYear,
                        strScale});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRegionCodeFromLayerInfoAsync(string strSubjectName, string strYear, string strScale) {
            this.GetAllRegionCodeFromLayerInfoAsync(strSubjectName, strYear, strScale, null);
        }
        
        /// <remarks/>
        public void GetAllRegionCodeFromLayerInfoAsync(string strSubjectName, string strYear, string strScale, object userState) {
            if ((this.GetAllRegionCodeFromLayerInfoOperationCompleted == null)) {
                this.GetAllRegionCodeFromLayerInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRegionCodeFromLayerInfoOperationCompleted);
            }
            this.InvokeAsync("GetAllRegionCodeFromLayerInfo", new object[] {
                        strSubjectName,
                        strYear,
                        strScale}, this.GetAllRegionCodeFromLayerInfoOperationCompleted, userState);
        }
        
        private void OnGetAllRegionCodeFromLayerInfoOperationCompleted(object arg) {
            if ((this.GetAllRegionCodeFromLayerInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRegionCodeFromLayerInfoCompleted(this, new GetAllRegionCodeFromLayerInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mapgis.com.cn/GetAllSubjectFromLayerInfo", RequestNamespace="http://www.mapgis.com.cn/", ResponseNamespace="http://www.mapgis.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllSubjectFromLayerInfo(string strRegionCode, string strYear, string strScale) {
            object[] results = this.Invoke("GetAllSubjectFromLayerInfo", new object[] {
                        strRegionCode,
                        strYear,
                        strScale});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllSubjectFromLayerInfoAsync(string strRegionCode, string strYear, string strScale) {
            this.GetAllSubjectFromLayerInfoAsync(strRegionCode, strYear, strScale, null);
        }
        
        /// <remarks/>
        public void GetAllSubjectFromLayerInfoAsync(string strRegionCode, string strYear, string strScale, object userState) {
            if ((this.GetAllSubjectFromLayerInfoOperationCompleted == null)) {
                this.GetAllSubjectFromLayerInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllSubjectFromLayerInfoOperationCompleted);
            }
            this.InvokeAsync("GetAllSubjectFromLayerInfo", new object[] {
                        strRegionCode,
                        strYear,
                        strScale}, this.GetAllSubjectFromLayerInfoOperationCompleted, userState);
        }
        
        private void OnGetAllSubjectFromLayerInfoOperationCompleted(object arg) {
            if ((this.GetAllSubjectFromLayerInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllSubjectFromLayerInfoCompleted(this, new GetAllSubjectFromLayerInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mapgis.com.cn/GetAllYear", RequestNamespace="http://www.mapgis.com.cn/", ResponseNamespace="http://www.mapgis.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllYear(string strRegionCode, string strSubjectName, string strScale) {
            object[] results = this.Invoke("GetAllYear", new object[] {
                        strRegionCode,
                        strSubjectName,
                        strScale});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllYearAsync(string strRegionCode, string strSubjectName, string strScale) {
            this.GetAllYearAsync(strRegionCode, strSubjectName, strScale, null);
        }
        
        /// <remarks/>
        public void GetAllYearAsync(string strRegionCode, string strSubjectName, string strScale, object userState) {
            if ((this.GetAllYearOperationCompleted == null)) {
                this.GetAllYearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllYearOperationCompleted);
            }
            this.InvokeAsync("GetAllYear", new object[] {
                        strRegionCode,
                        strSubjectName,
                        strScale}, this.GetAllYearOperationCompleted, userState);
        }
        
        private void OnGetAllYearOperationCompleted(object arg) {
            if ((this.GetAllYearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllYearCompleted(this, new GetAllYearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mapgis.com.cn/GetAllScale", RequestNamespace="http://www.mapgis.com.cn/", ResponseNamespace="http://www.mapgis.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllScale(string strRegionCode, string strSubjectName, string strYear) {
            object[] results = this.Invoke("GetAllScale", new object[] {
                        strRegionCode,
                        strSubjectName,
                        strYear});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllScaleAsync(string strRegionCode, string strSubjectName, string strYear) {
            this.GetAllScaleAsync(strRegionCode, strSubjectName, strYear, null);
        }
        
        /// <remarks/>
        public void GetAllScaleAsync(string strRegionCode, string strSubjectName, string strYear, object userState) {
            if ((this.GetAllScaleOperationCompleted == null)) {
                this.GetAllScaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllScaleOperationCompleted);
            }
            this.InvokeAsync("GetAllScale", new object[] {
                        strRegionCode,
                        strSubjectName,
                        strYear}, this.GetAllScaleOperationCompleted, userState);
        }
        
        private void OnGetAllScaleOperationCompleted(object arg) {
            if ((this.GetAllScaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllScaleCompleted(this, new GetAllScaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mapgis.com.cn/GetAllScaleStr", RequestNamespace="http://www.mapgis.com.cn/", ResponseNamespace="http://www.mapgis.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllScaleStr(string strRegionCode, string strSubjectName, string strYear) {
            object[] results = this.Invoke("GetAllScaleStr", new object[] {
                        strRegionCode,
                        strSubjectName,
                        strYear});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllScaleStrAsync(string strRegionCode, string strSubjectName, string strYear) {
            this.GetAllScaleStrAsync(strRegionCode, strSubjectName, strYear, null);
        }
        
        /// <remarks/>
        public void GetAllScaleStrAsync(string strRegionCode, string strSubjectName, string strYear, object userState) {
            if ((this.GetAllScaleStrOperationCompleted == null)) {
                this.GetAllScaleStrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllScaleStrOperationCompleted);
            }
            this.InvokeAsync("GetAllScaleStr", new object[] {
                        strRegionCode,
                        strSubjectName,
                        strYear}, this.GetAllScaleStrOperationCompleted, userState);
        }
        
        private void OnGetAllScaleStrOperationCompleted(object arg) {
            if ((this.GetAllScaleStrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllScaleStrCompleted(this, new GetAllScaleStrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSubjectListCompletedEventHandler(object sender, GetSubjectListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubjectListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubjectListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRegionCodeBySYSLCompletedEventHandler(object sender, GetRegionCodeBySYSLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegionCodeBySYSLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegionCodeBySYSLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetYearBySubjectCompletedEventHandler(object sender, GetYearBySubjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetYearBySubjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetYearBySubjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetYearBySubjectExCompletedEventHandler(object sender, GetYearBySubjectExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetYearBySubjectExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetYearBySubjectExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetYearBySubjectListCompletedEventHandler(object sender, GetYearBySubjectListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetYearBySubjectListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetYearBySubjectListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetJSYDYearsInfoCompletedEventHandler(object sender, GetJSYDYearsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJSYDYearsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJSYDYearsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetYearsBySubjectCompletedEventHandler(object sender, GetYearsBySubjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetYearsBySubjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetYearsBySubjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDataFieldBySolutionNameCompletedEventHandler(object sender, GetDataFieldBySolutionNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataFieldBySolutionNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataFieldBySolutionNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSubjectByYearCompletedEventHandler(object sender, GetSubjectByYearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubjectByYearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubjectByYearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSubjectNameCompletedEventHandler(object sender, GetSubjectNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubjectNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubjectNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSubjectPublishInfoCompletedEventHandler(object sender, GetSubjectPublishInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubjectPublishInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubjectPublishInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetInputAttValueCompletedEventHandler(object sender, GetInputAttValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInputAttValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInputAttValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetInputAttNameCompletedEventHandler(object sender, GetInputAttNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInputAttNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInputAttNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllRegionCodeFromLayerInfoCompletedEventHandler(object sender, GetAllRegionCodeFromLayerInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRegionCodeFromLayerInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRegionCodeFromLayerInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllSubjectFromLayerInfoCompletedEventHandler(object sender, GetAllSubjectFromLayerInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllSubjectFromLayerInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllSubjectFromLayerInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllYearCompletedEventHandler(object sender, GetAllYearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllYearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllYearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllScaleCompletedEventHandler(object sender, GetAllScaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllScaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllScaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllScaleStrCompletedEventHandler(object sender, GetAllScaleStrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllScaleStrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllScaleStrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591